legend.text = element_text(size=18))
m <- lm(residual~confidence, data=df)
summary(m)
m <- summary(m)
m$coefficients
m$r.squared
df = read.csv('/home/milesm/Publications/XGBScore/BenchmarkResults/DEKOIS/metrics/DEKOIS_residuals_confidence.csv', stringsAsFactors =  FALSE)
length(rownames(df))
max <- sqrt((3-1)/3) * sd(c(0,0,1))
df$confidence <- (1-df$multi_consensus_stdev-(1-max))/max
my_breaks = c(1, 10, 100, 1000, 10000, 100000)
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
m <- summary(lm(residual~confidence, data=df))$r.squared
print(paste(receptor, " : ", m))
}
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
m <- summary(lm(residual~confidence, data=subdf))$r.squared
print(paste(receptor, " : ", m))
}
m$coefficients
m <- lm(residual~confidence, data=df)
m <- summary(m)
m$coefficients
p <- m$coefficients
p['confidence']
p['p.value']
p
class(p)
rownames(p)
colnames(p)
p["Pr(>|t|)", 'confidence']
p["Pr(>|t|)", "confidence"]
p["confidence", "Pr(>|t|)"]
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
m <- summary(lm(residual~confidence, data=subdf))
r = m$r.squared
p = m$coefficients["confidence", "Pr(>|t|)"]
print(paste(receptor, " : ", r ," : ", p))
}
df = read.csv('/home/milesm/Publications/XGBScore/BenchmarkResults/DEKOIS/metrics/DEKOIS_residuals_confidence.csv', stringsAsFactors =  FALSE)
length(rownames(df))
max <- sqrt((3-1)/3) * sd(c(0,0,1))
df$confidence <- (1-df$multi_consensus_stdev-(1-max))/max
my_breaks = c(1, 10, 100, 1000, 10000, 100000)
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
m <- summary(lm(residual~confidence, data=subdf))
r = m$r.squared
p = m$coefficients["confidence", "Pr(>|t|)"]
print(paste(receptor, " : ", r ," : ", p))
}
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
recplot <- ggplot(df, aes(x=confidence, y=residual)) +
geom_point(aes(confidence, residual, color=Receptor), size=2, shape=23) +
#scale_color_viridis(breaks=c(1,10,100,1000,10000), trans="log", name='Point Density', option = "mako") +
geom_smooth(method="lm", size=0.5, colour = "#fb9a99") +
theme(legend.justification = "top") +
xlab("Model Certainty") +
ylab("Residual") +
# geom_text(x = 0.35, y = 0.80, label = get_equation(m1), size = 6) +
theme(text = element_text(size = 20),
axis.text.x = element_text(size=20)) +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) +
theme(legend.justification = "top") +
theme(legend.key = element_rect(color = NA, fill = NA),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size=18))
ggsave(plot = recplot, width = 14, height = 9, dpi = 700, filename = paste("/home/milesm/Publications/XGBScore/Figures/", receptor, "DEKOIS_confidence_residuals_plot.png"), bg='white')
}
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
recplot <- ggplot(subdf, aes(x=confidence, y=residual)) +
geom_point(aes(confidence, residual, color=Receptor), size=2, shape=23) +
#scale_color_viridis(breaks=c(1,10,100,1000,10000), trans="log", name='Point Density', option = "mako") +
geom_smooth(method="lm", size=0.5, colour = "#fb9a99") +
theme(legend.justification = "top") +
xlab("Model Certainty") +
ylab("Residual") +
# geom_text(x = 0.35, y = 0.80, label = get_equation(m1), size = 6) +
theme(text = element_text(size = 20),
axis.text.x = element_text(size=20)) +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm")) +
theme(legend.justification = "top") +
theme(legend.key = element_rect(color = NA, fill = NA),
legend.key.size = unit(1, "cm"),
legend.text = element_text(size=18))
ggsave(plot = recplot, width = 14, height = 9, dpi = 700, filename = paste("/home/milesm/Publications/XGBScore/Figures/", receptor, "DEKOIS_confidence_residuals_plot.png"), bg='white')
}
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
m <- summary(lm(residual~confidence, data=subdf))
r = m$r.squared
p = m$coefficients["confidence", "Pr(>|t|)"]
if (r < 0.15){
print(paste(receptor, " : ", r ," : ", p))
}
}
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
?scale_color_brewer
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_receptorwise_confidence_residuals.R", echo=TRUE)
for (receptor in unique(df$Receptor)){
subdf <- df[df$Receptor == receptor, ]
m <- summary(lm(residual~confidence, data=subdf))
r = m$r.squared
p = m$coefficients["confidence", "Pr(>|t|)"]
if (r < 0.15){
print(paste(receptor, " : ", r ," : ", p))
}
}
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_AUCPR_curves.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/TestSet_Highest_Pose_Mean_Rank.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/TestSet_Highest_Pose_Mean_RMSD.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/TestSet_EF_Table.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Confidence_DEKOIS_receptors.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/CASF_Pose_Prediction_Mean_Rank.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/TestSet_AUCPR_curves.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_confidence_residuals.R", echo=TRUE)
ggsave(plot = resplot, width = 14, height = 9, dpi = 700, filename = "/home/milesm/Publications/XGBScore/Figures/DEKOIS_confidence_residuals_plot.png", bg='white')
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/SCORCH_num_poses.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
df$binding
library(dplyr)
library("optparse")
library("ggplot2")
library(foreach)
library(doParallel)
main <- read.csv('/home/milesm/Publications/XGBScore/BenchmarkResults/DEKOIS/combined/dekois_ranked_scores.csv')
df <- main
df$binding = df$binding/1e9
df$binding
df$binding <- log(df$binding)
ggplot(df, aes(x=multi_consensus__max_pose, y=binding)) +
geom_point(size=2, shape=23) +
geom_smooth(method="lm", size=0.5, colour = "#fb9a99") +
xlab("SCORCH Score") +
ylab("Kd (nM)") +
theme(text = element_text(size = 20),
axis.text.x = element_text(size=20)) +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
-log(0.00001)
-log10(0.00001)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
df <- main
df$binding = df$binding/1e9
df$binding <- -log10(df$binding)
ggplot(df, aes(x=multi_consensus__max_pose, y=binding)) +
geom_point(size=2, shape=23) +
geom_smooth(method="lm", size=0.5, colour = "#fb9a99") +
xlab("SCORCH Score") +
ylab("Kd (nM)") +
theme(text = element_text(size = 20),
axis.text.x = element_text(size=20)) +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
-log10(1)
m1 <- lm(binding~multi_consensus__max_pose, data=df)
summary(m1)
colnames(df)
sum(df$active)
df <- main
df$binding = df$binding/1e9
df$binding <- -log10(df$binding)
df <- df[df$active == 1]
m1 <- lm(binding~multi_consensus__max_pose, data=df)
df <- main
df$binding = df$binding/1e9
df$binding <- -log10(df$binding)
df <- df[df$active == 1, ]
m1 <- lm(binding~multi_consensus__max_pose, data=df)
summary(m1)
df <- main
df$binding = df$binding/1e9
df$binding <- -log10(df$binding)
df[is.na(df$binding)] <- 1
df <- main
df$binding = df$binding/1e9
df$binding <- -log10(df$binding)
df[is.na(df)] <- 1
m1 <- lm(binding~multi_consensus__max_pose, data=df)
summary(m1)
df <- main
df[is.na(df)] <- 1
df$binding = df$binding/1e9
df$binding <- -log10(df$binding)
m1 <- lm(binding~multi_consensus__max_pose, data=df)
ggplot(df, aes(x=multi_consensus__max_pose, y=binding)) +
geom_point(size=2, shape=23) +
geom_smooth(method="lm", size=0.5, colour = "#fb9a99") +
xlab("SCORCH Score") +
ylab("Kd (nM)") +
theme(text = element_text(size = 20),
axis.text.x = element_text(size=20)) +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
-log10(2e-5)
-log10(1)
main <- read.csv('/home/milesm/Publications/XGBScore/BenchmarkResults/DEKOIS/combined/dekois_ranked_scores.csv')
df <- main
df[is.na(df)] <- 1
df$binding
df <- main
df[is.na(df)] <- 1e9
df$binding = df$binding/1e9
df$binding <- -log10(df$binding)
m1 <- lm(binding~multi_consensus__max_pose, data=df)
ggplot(df, aes(x=multi_consensus__max_pose, y=binding)) +
geom_point(size=2, shape=23) +
geom_smooth(method="lm", size=0.5, colour = "#fb9a99") +
xlab("SCORCH Score") +
ylab("Kd (nM)") +
geom_line()
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
-log10(1)
-log10(2.5e-5)
-log10(25e-5)
-log10(2.5e-5)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
pKd = 7.58 - 0.56
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
summary(m1)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
main <- read.csv('/home/milesm/Publications/XGBScore/BenchmarkResults/DEKOIS/combined/dekois_ranked_scores.csv')
df <- main
df[is.na(df)] <- 1
df$kdkibinding = df$kdkibinding/1e9
df$kdkibinding <- -log10(df$kdkibinding)
get_equation <- function(m){
model_params <- tidy(summary(m))
intercept <- round(model_params[1,'estimate'],2)
estimate <- round(model_params[2,'estimate'],2)
print(estimate)
print(intercept)
equation <- paste("y = ",intercept," + ",abs(estimate),"x", sep="")
return(as.character(equation))
}
df <- df[df$active == 1, ]
length(df)
main <- read.csv('/home/milesm/Publications/XGBScore/BenchmarkResults/DEKOIS/combined/dekois_ranked_scores.csv')
df <- main
df
df <- main
sum(df$active)
df[is.na(df)] <- 1
sum(df$active)
df$kdkibinding = df$kdkibinding/1e9
sum(df$active)
df$kdkibinding <- -log10(df$kdkibinding)
sum(df$active)
get_equation <- function(m){
model_params <- tidy(summary(m))
intercept <- round(model_params[1,'estimate'],2)
estimate <- round(model_params[2,'estimate'],2)
print(estimate)
print(intercept)
equation <- paste("y = ",intercept," + ",abs(estimate),"x", sep="")
return(as.character(equation))
}
df <- df[df$active == 1, ]
sum(df$active)
length(rownames(df))
df <- main
df[is.na(df)] <- 1
df$kdkibinding = df$kdkibinding/1e9
df$kdkibinding <- -log10(df$kdkibinding)
df <- df[!is.na(df$kdkibinding), ]
length(rownames(df))
df$kdkibinding
main <- read.csv('/home/milesm/Publications/XGBScore/BenchmarkResults/DEKOIS/combined/dekois_ranked_scores.csv')
df <- main
df$kdkibinding = df$kdkibinding/1e9
df$kdkibinding <- -log10(df$kdkibinding)
df <- df[!is.na(df$kdkibinding), ]
length(rownames(df))
get_equation <- function(m){
model_params <- tidy(summary(m))
intercept <- round(model_params[1,'estimate'],2)
estimate <- round(model_params[2,'estimate'],2)
print(estimate)
print(intercept)
equation <- paste("y = ",intercept," + ",abs(estimate),"x", sep="")
return(as.character(equation))
}
m1 <- lm(kdkibinding~multi_consensus__max_pose, data=df)
summary(m1)
ggplot(df, aes(x=multi_consensus__max_pose, y=kdkibinding)) +
geom_point(size=2, shape=23) +
geom_smooth(method="lm", size=0.5, colour = "#fb9a99") +
xlab("SCORCH Score") +
ylab("pKd") +
geom_hline(aes(yintercept=4.60206), colour="blue") +
geom_text(x = 0.35, y = 12, label = get_equation(m1), size = 6) +
theme(text = element_text(size = 20),
axis.text.x = element_text(size=20),
axis.text.y = element_text(size=20)) +
theme(plot.margin = unit(c(1, 1, 1, 1), "cm"))
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Kd_vs_Score.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_range_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_range_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/DEKOIS_range_confidence_residuals.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
source("~/Publications/XGBScore/Code/MLScoring/reproducibilityCode/publicationFigures/scripts/Dekois_EF_boxplots.R", echo=TRUE)
require(ggplot2)
df <- read.csv('/home/milesm/Masters/SEM2/CEG/Coursework/server_analyses/clock_command/rtt.csv', sep='\t')
df <- df[!grepl("NODE",df$name),]
ggplot(data=df, aes(x=date, y=root.to.tip.distance)) +
geom_point() +
geom_smooth(method="lm")
m1 <- lm(root.to.tip.distance~date, data=df)
summary(m1)$coefficients
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
source("~/Masters/SEM2/CEG/Coursework/clock_calculations.R", echo=TRUE)
df <- read.csv('/home/milesm/Masters/SEM2/NGG/Coursework/genomic_features_plot.csv')
df
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
source("~/Masters/SEM2/NGG/Coursework/quast_output/genomic_features_plot.R", echo=TRUE)
df
remotes::install_github('rstudio/pagedown')
.libPaths()
The University of Edinburgh
install.packages("komaletter")
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase_Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase_Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/DD/Kinase_Report/Similarity_TableR.R", echo=TRUE)
source("~/Masters/SEM2/RPP/gantt_chart.R", echo=TRUE)
plot
source("~/Masters/SEM2/RPP/gantt_chart.R", echo=TRUE)
plot
source("~/Masters/SEM2/RPP/gantt_chart.R", echo=TRUE)
pls
plt
library("ganttrify")
library("ggplot2")
df = read.csv('/home/milesm/Masters/SEM2/RPP/schedule.csv')
df
plt = ganttrify(project = df,
by_date = TRUE,
exact_date = TRUE,
size_text_relative = 1.2,
month_number_label = FALSE,
font_family = "Roboto Condensed")
df
source("~/Masters/SEM2/RPP/gantt_chart.R", echo=TRUE)
plt
source("~/Masters/SEM2/RPP/gantt_chart.R", echo=TRUE)
plt
remotes::install_github('rstudio/pagedown')
install.packages("remotes")
remotes::install_github('rstudio/pagedown')
setwd("~/GitHub/ExpressionAnalysis")
if (interactive()) {
response <- readline(msg)
} else {
cat(msg);
response <- readLines("stdin",n=1);
}
# check all required packages are installed before running the script
dependencies <- c("pheatmap","rcartocolor","assertthat","dplyr")
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
keep_data_info
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
keep_data_info
keep_data
gene_annot
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
keep_data
keep_data_info
plotting_df
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
keep_data_info
plotting_df
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
plotting_df
keep_data_info
sample_annot
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
keep_data
gene_annot
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
plotting_matrix
source("~/GitHub/ExpressionAnalysis/Analyse_Expression.R", echo=TRUE)
install.packages("xcolor")
install.packages("xcolour")
install.packages("tinyyex")
install.packages("tinytex")
tinytex::parse_install(
text = "! LaTeX Error: File `xcolor.sty' not found."
)
